#!/bin/bash
# Originally Written By Nicole
# Modification by Henry
#
# Plugin Name: check_ipsec
# Version: 2.1
# Date: 09/17/2013
#
# Usage: check_ipsec --tunnels <n>
#
# gateways.txt file must be located in same directory
# and has to look like:
# nameofconn1	192.168.0.1
# nameofconn2	192.168.1.1
#
# ------------Defining Variables------------
PROGNAME=`basename $0`
PROGPATH=`echo $0 | sed -e 's,[\\/][^\\/][^\\/]*$,,'`
REVISION=`echo '$Revision: 2.1 $' | sed -e 's/[^0-9.]//g'`
DOWN=""
# ---------- Change to your needs ----------
PLUGINPATH="/usr/lib/nagios/plugins"
GATEWAYLIST="gateways.txt"
IPSECBIN="/usr/sbin/ipsec"
FPINGBIN="/usr/bin/fping"
# ping server in network on the other side of the tunnel
PINGIP=0		# ping yes or no (1/0)
# ------------------------------------------

. $PROGPATH/utils.sh

# Get the number of tunnels for testing
TUNNELS=`cat $PLUGINPATH/$GATEWAYLIST | wc -l`

# Testing availability of $IPSECBIN, $FPINGBIN and $GATEWAYLIST

test -e $IPSECBIN
if [ $? -ne 0 ];
then
	echo CRITICAL - $IPSECBIN not exist
	exit $STATE_CRITICAL
else
	STRONG=`$IPSECBIN --version |grep strongSwan | wc -l`
fi

if [ $PINGIP -eq 1 ]
then
	test -e $FPINGBIN
	if [ $? -ne 0 ];
	then
		echo CRITICAL - $FPINGBIN not exist
		exit $STATE_CRITICAL
	fi
fi

test -e $PROGPATH/$GATEWAYLIST
if [ $? -ne 0 ];
then
   echo CRITICAL - $GATEWAYLIST not exist
   exit $STATE_CRITICAL
fi

print_usage() {
        echo "Usage:"
        echo " $PROGNAME --help"
        echo " $PROGNAME --version"
        echo " Created by Henry, questions or problems, report on Github"
		echo ""
}

print_help() {
        print_revision $PROGNAME $REVISION
        echo ""
        print_usage
        echo " Checks vpn connection status of an openswan or strongswan installation."
		echo ""
        echo " provides the tunnel status of the openswan or strongswan installation"
		echo ""
        echo " --help"
		echo " -h"
        echo " prints this help screen"
		echo ""
        echo " --version"
		echo " -V"
        echo " Print version and license information"
        echo ""
}

check_tunnel() {

	if [[ "$STRONG" -eq "1" ]]
	then
	    GATEWAYS=`$IPSECBIN status`
	else
	    GATEWAYS=`$IPSECBIN whack --status`
	fi

	location

	if [[ "$count" -eq "$TUNNELS" ]]
	then
		echo "OK - All $TUNNELS tunnels are up and running"
		exit $STATE_OK
	elif [[ "$count" -gt "$TUNNELS" ]]
	then
		echo "WARNING - More than $TUNNELS ($count) tunnels are up and running"
                exit $STATE_WARNING
	else
		echo "CRITICAL - Only $count out of $TUNNELS are up and running. Missing: $DOWN"
		exit $STATE_CRITICAL
	fi
}


location() {
count=0
i=1

while read line; do
	CONN=`echo $line| awk '{print $1}'`
	IP=`echo $line| awk '{print $2}'`

	tunneltest=`echo "$GATEWAYS" | grep -e $CONN | wc -l`

	if [[ "$tunneltest" -ge "3" ]]
    	then
		count=$[$count+1]
    	else
		DOWN="$DOWN $CONN"
	fi

    	if [[ "$PINGIP" -eq "1" && "$tunneltest" -eq "3" ]]
    	then
        alive=`$FPINGBIN $IP -r 1 | grep alive | wc -l`

        if [[ "$alive" -eq "0" ]]
        then
            count=$[$count+1]
            DOWN="$DOWN $CONN (no ping)"
        fi
    fi


i=$[$i+1]

done < $PLUGINPATH/$GATEWAYLIST
}


case "$1" in
--help)
        print_help
        exit $STATE_OK
        ;;
-h)
        print_help
        exit $STATE_OK
        ;;
--version)
        print_revision $PLUGIN $REVISION
        exit $STATE_OK
        ;;
-V)
        print_revision $PLUGIN $REVISION
        exit $STATE_OK
        ;;
*)
	check_tunnel
        exit $STATE_OK

esac
